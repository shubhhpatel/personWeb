{
  "version": 3,
  "sources": ["../../refractor/lang/aspnet.js"],
  "sourcesContent": ["// @ts-nocheck\nimport refractorCsharp from './csharp.js'\nimport refractorMarkup from './markup.js'\naspnet.displayName = 'aspnet'\naspnet.aliases = []\n\n/** @type {import('../core.js').Syntax} */\nexport default function aspnet(Prism) {\n  Prism.register(refractorCsharp)\n  Prism.register(refractorMarkup)\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\n    'page-directive': {\n      pattern: /<%\\s*@.*%>/,\n      alias: 'tag',\n      inside: {\n        'page-directive': {\n          pattern:\n            /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n          alias: 'tag'\n        },\n        rest: Prism.languages.markup.tag.inside\n      }\n    },\n    directive: {\n      pattern: /<%.*%>/,\n      alias: 'tag',\n      inside: {\n        directive: {\n          pattern: /<%\\s*?[$=%#:]{0,2}|%>/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.csharp\n      }\n    }\n  })\n  // Regexp copied from prism-markup, with a negative look-ahead added\n  Prism.languages.aspnet.tag.pattern =\n    /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/\n\n  // match directives of attribute value foo=\"<% Bar %>\"\n  Prism.languages.insertBefore(\n    'inside',\n    'punctuation',\n    {\n      directive: Prism.languages.aspnet['directive']\n    },\n    Prism.languages.aspnet.tag.inside['attr-value']\n  )\n  Prism.languages.insertBefore('aspnet', 'comment', {\n    'asp-comment': {\n      pattern: /<%--[\\s\\S]*?--%>/,\n      alias: ['asp', 'comment']\n    }\n  })\n\n  // script runat=\"server\" contains csharp, not javascript\n  Prism.languages.insertBefore(\n    'aspnet',\n    Prism.languages.javascript ? 'script' : 'tag',\n    {\n      'asp-script': {\n        pattern:\n          /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        alias: ['asp', 'script'],\n        inside: Prism.languages.csharp || {}\n      }\n    }\n  )\n}\n"],
  "mappings": ";;;;;;;;;;AAGA,OAAO,cAAc;AACrB,OAAO,UAAU,CAAC;AAGH,SAAR,OAAwB,OAAO;AACpC,QAAM,SAAS,MAAe;AAC9B,QAAM,SAAS,MAAe;AAC9B,QAAM,UAAU,SAAS,MAAM,UAAU,OAAO,UAAU;AAAA,IACxD,kBAAkB;AAAA,MAChB,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,QACN,kBAAkB;AAAA,UAChB,SACE;AAAA,UACF,OAAO;AAAA,QACT;AAAA,QACA,MAAM,MAAM,UAAU,OAAO,IAAI;AAAA,MACnC;AAAA,IACF;AAAA,IACA,WAAW;AAAA,MACT,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,QACN,WAAW;AAAA,UACT,SAAS;AAAA,UACT,OAAO;AAAA,QACT;AAAA,QACA,MAAM,MAAM,UAAU;AAAA,MACxB;AAAA,IACF;AAAA,EACF,CAAC;AAED,QAAM,UAAU,OAAO,IAAI,UACzB;AAGF,QAAM,UAAU;AAAA,IACd;AAAA,IACA;AAAA,IACA;AAAA,MACE,WAAW,MAAM,UAAU,OAAO,WAAW;AAAA,IAC/C;AAAA,IACA,MAAM,UAAU,OAAO,IAAI,OAAO,YAAY;AAAA,EAChD;AACA,QAAM,UAAU,aAAa,UAAU,WAAW;AAAA,IAChD,eAAe;AAAA,MACb,SAAS;AAAA,MACT,OAAO,CAAC,OAAO,SAAS;AAAA,IAC1B;AAAA,EACF,CAAC;AAGD,QAAM,UAAU;AAAA,IACd;AAAA,IACA,MAAM,UAAU,aAAa,WAAW;AAAA,IACxC;AAAA,MACE,cAAc;AAAA,QACZ,SACE;AAAA,QACF,YAAY;AAAA,QACZ,OAAO,CAAC,OAAO,QAAQ;AAAA,QACvB,QAAQ,MAAM,UAAU,UAAU,CAAC;AAAA,MACrC;AAAA,IACF;AAAA,EACF;AACF;",
  "names": []
}
